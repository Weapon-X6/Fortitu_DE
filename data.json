[{"model": "blog.tag", "pk": 1, "fields": {"value": "Django"}}, {"model": "blog.tag", "pk": 2, "fields": {"value": "Python"}}, {"model": "blog.post", "pk": 1, "fields": {"author": 1, "created_at": "2022-05-29T22:44:46.216Z", "modified_at": "2022-05-29T22:56:29.266Z", "published_at": "2022-05-29T22:42:20Z", "title": "When Girls Telephone Boys", "slug": "when-girls-telephone-boys", "summary": "The official <strong>Django documentation</strong> covers everything you need to know about Django (and then some).", "content": "With <strong>Django</strong>, you can take web applications from concept to launch in a matter of hours. Django takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. Itâ€™s free and open source.\r\n\r\n\r\n<p>In older architectures, the messaging system defaulted to use the same database used for the main business request/response logic, which created bottlenecks. With the modern decoupling in message-based systems, an app only needs to locate the message broker. In RPC-based systems, one service calls another directly, so it needs to know the address of every instance that it wants to call, making it difficult to maintain as the system grows</p>\r\n</ br>\r\nSo, decoupling the message queuing from the database:\r\n<ol>\r\n<li>Improves database availability</li>\r\n<li>Enables greater message queue scalability</li>\r\n</ol>", "tags": [1]}}, {"model": "blango_auth.User", "pk": 1, "fields": {"password": "pbkdf2_sha256$320000$CIkSG4x4sTQyESzcVzeYZb$xXhC+2+/Vbgp69MJdYdcuHWo6O3vbliUvdmf6L3Qhz4=", "last_login": "2022-05-29T22:41:23Z", "is_superuser": true, "username": "waffe_x", "first_name": "Eduardo", "last_name": "Argueta", "email": "argueta_eduardo@yahoo.de", "is_staff": true, "is_active": true, "date_joined": "2022-05-29T22:39:14Z", "groups": [], "user_permissions": []}}]